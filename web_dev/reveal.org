#+OPTIONS: num:nil toc:nil
#+REVEAL_TRANS: zoom
#+REVEAL_THEME: black
#+author: NFVblog
#+title: Reveal.js
#+subtitle: realizzare presentazioni con HTML+node.js
#+email: 

* Cos'è?
reveal.js è un framework realizzato molto bene per la realizzazione
di presentazioni interattive, in modo semplice e veloce.
 * Scalabile;
 * code listing;
 * Slide responsive che possono essere fruite anche da dispositivi mobile;
 * Animazioni (/non è complesso effettuare animazioni al suo interno/).

** Scalabile
Perché essendo basato comunque su protocolli web basta semplicemente
avere un server web con il servizio attivo, per poter visualizzare la
presentazione ovunque.

** Code Listing
Il code Listing è una funzionalità che consente di visualizzare del
codice direttamente in formato grafico nelle slide.
#+begin_src common-lisp
  (defun fib (n)
  "Restituisce il numero n delle sequenza di fibonacci"
  (if (< n 2)
      n
      (+ (fib (- n 1))
         (fib (- n 2)))))
#+end_src

*** Sintassi
Sintassi semplice e che riconosce in automatico la sintassi del linguaggio
utilizzato.
#+begin_src html
  <pre><code>
      ...
  </code></pre>
#+end_src 

* Slide responsive
Il framework è pensato per essere responsivo, infatti, esso gestisce il fattore di scala,
quindi, le presentazioni possono essere fruite anche da totem, smart tv, tablet e smartphone.

* Applicativi che fanno uso di questo framework
Visto la versatilità nel tempo sono state create alcune web app, con anche un servizio in cloud,
come ad esempio [[https://slides.com/][slides.com]], che consente di fare tutte le operazioni
realizzabili tramite codice graficamente, il progetto si mantiene con un pricing (abbonamenti). 
* Animazioni
reveal.js possiede ottimi effetti di transizione e in generale l'ambiente è molto coerente,
questo garantisce una certa versatilità.

* Org-mode \to Reveal.js
Per convertire da org mode a reveal.js, bisogna prima di tutto scaricare l'estensione *org-re-reveal*,
una soluzione, che consente di fare un esportazione tramite il menù dedicato accessibile con il keybinding
*C-c C-e*
#+begin_src elisp
  ;;;; org to reveal
  (require 'org-re-reveal)
  (setq org-re-reveal-root "percorso/in/cui/sta/reveal.js")
  (setq org-reveal-mathjax t)
#+end_src
** Ottenere reveal
Per ottenere reveal.js, è possibile reperire il pacchetto sorgente da github: 
#+begin_src sh
  git clone https://github.com/hakimel/reveal.js
  cp reveal.js && npm install
#+end_src
/Dove è presente anche un demo per comprendere come funziona il framework/

* Formule matematiche
un altro punto fondamentale è l'inserimento di formule matematiche
che in un modo o nell'altro è possibile gestire anche le formule matematiche,
visto che comunque si sta esportando da /org-mode/ a reveal.js (/html+css+js/),
supporta la compatibilità con $\LaTeX$, quindi anche la parte /math-mode/
è totalmente utilizzabile in slide.
** Esempio
Prendendo, un esempio di funzione, scritta in forma frazionaria
$$f(x)=\frac{x}{\sin{x}}$$
Che in $\LaTeX$ e in Org Mode, viene scritto in questo modo:
#+begin_src latex
  f(x)=\frac{x}{\sin{x}}
#+end_src

** Export in HTML
Mentre, l'incapsulamento in HTML, viene nel seguente modo:
#+begin_src html
  <div class="org-src-container">
    <pre class="src src-latex">
      f(x)=<span style="color: #68228b;">
	\frac
      </span>{x}{
      <span style="color: #68228b;">
	\sin
      </span>{x}}
    </pre>
  </div>
#+end_src
(estratto dal file generato da org-re-reveal)


* struttura
In Reveal il progetto è suddiviso in questo modo:
|--------------------+------------|
| *Componenti*       | *Tipoligi* |
|--------------------+------------|
|--------------------+------------|
| /Tema/             | css        |
|--------------------+------------|
| /Animazioni ed fx/ | css+js     |
|--------------------+------------|
| /main file/        | html       |
|--------------------+------------|


#+begin_comment
#+REVEAL_TRANS: None/Fade/Slide/Convex/Concave/Zoom
#+REVEAL_THEME: Black/White/League/Sky/Beige/Simple/Serif/Blood/Night/Moon/Solarized
#+end_comment
